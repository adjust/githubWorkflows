name: Deploying helm chart

on:
  workflow_call:
    inputs:
      release:
        description: "Release name"
        type: string
        required: true
      region:
        description: "Region to deploy the application to"
        default: "eu-central-1"
        type: string
      chart:
        description: "Path to the chart"
        type: string
        required: true
      cluster:
        description: "Cluster to deploy the application to"
        default: ""
        required: true
        type: string
      namespace:
        description: "Namespace to which app will be deployed to or the workspace name"
        default: ""
        required: true
        type: string
      values:
        description: "Values key=value pairs separated by space"
        default: ""
        type: string
      ref:
        description: "Branch to deploy manifests from"
        default: ${{ github.ref_name }}
        type: string
      
      create_namespace:
        description: "Create namespace if not exists"
        default: true
        type: string

    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      TEAM_GITHUB_TOKEN:
        required: true

jobs:
  run:
    name: Deploying application
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:          
          repository: adjust/${{ inputs.release }}
          token: ${{ secrets.TEAM_GITHUB_TOKEN }}
          submodules: recursive
          ref: ${{ inputs.ref }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.region }}
        
      - name: Generate a kubeconfig for Amazon EKS
        run: |
          aws eks --region ${{ inputs.region }} update-kubeconfig --name ${{ inputs.cluster }}

      - name: Generate values
        id: values
        run: | 
          values="$(echo ${{ inputs.values }} | sed -r 's/ / --set /g')"
          echo "::set-output name=VALUES::$values"

      - name: "Lint charts"
        run: |
          helm lint ${{ inputs.chart }} --strict

      - name: 'Deploy'
        run: |
          helm upgrade --install ${{ inputs.release }} --set ${{ steps.values.outputs.VALUES }} --namespace ${{ inputs.namespace }} ${{ inputs.chart }} ${{ (inputs.create_namespace == 'true' && '--create-namespace') || '' }}
